import java.util.LinkedList;
import java.util.Queue;

class Node{
		int data;
		Node left,right;
		
		Node(int val){
			data = val;
			left = null;
			right = null;
		}
	}


class BinaryTree{
	static Node root;
		
	private static void levelorder(Node root){
		
		if(root == null) return;
		
		System.out.println(root.data);
		
		Queue<Node> q = new LinkedList<Node>();
		if(root.left!=null){
			q.add(root.left);
		}
		if(root.right!=null){
			q.add(root.right);
		}		
		
		while(!q.isEmpty()){
			int n = q.size();
			for(int i=0;i<n;i++){
				Node qNode = q.poll();
				System.out.print(qNode.data);
				if(qNode.left!=null){
					q.add(qNode.left);
				}
				if(qNode.right!=null){
					q.add(qNode.right);
				}		
			}
			System.out.println("");
		}
		
	}
	
	
	public static void main(String[] args){
		BinaryTree tree = new BinaryTree();
		   tree.root= new Node(1);
		   tree.root.left= new Node(2);
		   tree.root.right= new Node(3);
		   tree.root.left.left= new Node(4);
		   tree.root.left.right= new Node(5);
		   
		   levelorder(root);
	   }

}	   