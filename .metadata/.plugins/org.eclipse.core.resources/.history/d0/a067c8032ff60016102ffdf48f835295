

public class BinarySum {


	private static String binarySum(String s1, String s2) {
		String result = "";
		
		if(s1.length()<s2.length()){
			for(int i =0;i<s2.length()-s1.length();i++){
				s1 = '0'+s1;
			}
		}else if(s1.length()>s2.length()){
			for(int i =0;i<s1.length()-s2.length();i++){
				s2 = '0'+s2;
			}
			
		}
		
		System.out.println(s1.length()+" "+s2.length());
		
		int carry =0;
		for(int i =s1.length()-1;i>=0;i++){
			int first = s1.charAt(i)-'0';
			int second = s2.charAt(i)-'0';
			
			int sum = first ^ second ^ carry;
			
			carry = (first & second) | (second & carry) | (first & carry);
			
			result = Integer.toString(sum) + result;
		}
		if(carry == 1)
			result = '1'+result;
		
		return result;
	}
	
	private static int makeEqualLen(String s1, String s2) {

		if(s1.length()<s2.length()){
			for(int i =0;i<s2.length()-s1.length();i++){
				s1 = '0'+s1;
			}
		}else if(s1.length()>s2.length()){
			for(int i =0;i<s1.length()-s2.length();i++){
				s2 = '0'+s2;
			}
		}
		//return any string , since they are equal now
		return s2.length();
	}

	/*private static String binarySum(String s1, String s2) {
		
		if(s1==null)return s2;
		if(s2 == null) return s1;
		
		int[] s1_arr = new int[s1.length()];
		for(int i=0; i<s1.length();i++){
			s1_arr[i] = s1.charAt(i)-'0';
		}
		int[] s2_arr = new int[s2.length()];
		for(int i=0; i<s2.length();i++){
			s2_arr[i] = s2.charAt(i)-'0';
		}
		
		int len =0;
		int[] sum ;
		if(s1.length()>=s2.length()){
			len = s2.length();
			sum = new int[s1.length()+1];
		}else{
			len = s1.length();
			sum = new int[s2.length()+1];
		}
		
		int s1Index = s1.length()-1;
		int s2Index = s2.length()-1;
		int carry = 0;
		int SumIndex = sum.length-1;
		for(int i =0; i<len; i++ ){
			if(s1_arr[s1Index-i] == s2_arr[s2Index-i]){
				if(s1_arr[s1Index-i]==1){
					if(carry == 1){
						sum[SumIndex] = 1;
					}else{
						sum[SumIndex] = 0;
					}
					carry = 1;
				}else if(s1_arr[s1Index-i]==0){
					if(carry == 1){
						sum[SumIndex] = 1;
					}else{
						sum[SumIndex] = 0;
					}
					carry = 0;
				}
			}else{
				if(carry == 1){
					sum[SumIndex] = 0;
				}else{
					sum[SumIndex] = 1;
				}
				carry = 0;
			}
			SumIndex--;
		}
		if(s1.length()==s2.length()){
			if(carry==1){
				sum[SumIndex] = 1;
			}else{
				sum[SumIndex] = 0;
			}
		}else{
			if(s1.length()> s2.length()){
				sum= appendData(s1_arr,sum,SumIndex,carry);
			}else{
				sum= appendData(s2_arr,sum,SumIndex,carry);
			}
		}
		
		StringBuilder builder = new StringBuilder();
		for(int i=0;i<sum.length;i++){
			if(i==0 && sum[i]==0)
				continue;
			else{
				builder.append(sum[i]);
			}
		}
		
		return builder.toString();
	}
	
	private static int[] appendData(int[] s, int[] sum, int sumIndex, int carry) {
		for(int i=sumIndex-1;i>=0;i--){
			if(carry == 1){
				if(s[i]==1){
					carry = 1;
					sum[sumIndex] = 0;
				}
			}else{
					carry =0;
					sum[sumIndex] = s[i];
				}
			sumIndex--;
		}
		
		if(carry==1){
			sum[0] = 1;
		}else{
			sum[0] = 0;
		}
		return sum;
	}*/

	public static void main(String[] args) {
		System.out.println(binarySum("1111","100"));
	}

}
